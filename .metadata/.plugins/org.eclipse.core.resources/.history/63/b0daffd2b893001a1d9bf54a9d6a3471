package com.roots.cacaopay.catalogos.controllers;

import java.util.HashMap;
import java.util.Map;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.roots.cacaopay.catalogos.entity.TipoTransaccion;
import com.roots.cacaopay.catalogos.services.TipoTransaccionService;
import com.roots.cacaopay.commons.controllers.CommonController;

@RestController
@RequestMapping("tipo-transaccion")
public class TipoTransaccionController extends CommonController<TipoTransaccion, TipoTransaccionService> {

	@Value("${configuracion.texto}")
	private String texto;
	
	@PutMapping("/{id}")
	public ResponseEntity<?> editar(@RequestBody TipoTransaccion tipoTransaccion, @PathVariable Long id){
		
		Optional<TipoTransaccion> tipoTrans = this.service.findById(id);
		if(!tipoTrans.isPresent()) {
			return ResponseEntity.notFound().build();
		}
		
		TipoTransaccion nuevoCanal = tipoTrans.get();
		
		nuevoCanal.setCodigo(tipoTransaccion.getCodigo());
		nuevoCanal.setNombre(tipoTransaccion.getNombre());
		nuevoCanal.setFisica(tipoTransaccion.getFisica());
		nuevoCanal.setEfectocontable(tipoTransaccion.getEfectocontable());
		nuevoCanal.setEfectosaldo(tipoTransaccion.getEfectosaldo());

		return ResponseEntity.status(HttpStatus.CREATED).body(this.service.save(nuevoCanal));

	}
	
	@GetMapping("/get-config")
	public ResponseEntity<?> getConfig(){
		Map<String, String> json = new HashMap<>();
		json.put("config", texto)
		return new ResponseEntity<Map<String, String>>(json, HttpStatus.OK);
	}
}
